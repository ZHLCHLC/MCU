C51 COMPILER V9.54   UART                                                                  03/11/2021 23:01:56 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\output\uart.obj
COMPILER INVOKED BY: C:\mcu\C51\C51\BIN\C51.EXE ..\bsp\uart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\bsp;..\user) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\uart.lst) OBJECT(..\output\uart.obj)

line level    source

   1          #include "pbdata.h"
   2          
   3          typedef unsigned char u8;
   4          typedef unsigned int u16;
   5          
   6          char receive_1;
   7          char receive_2;
   8          
   9          volatile char ReceData[12];
  10          volatile char flay485;
  11          
  12          void UartInit1()   //串口一
  13          {
  14   1              SCON = 0x50;       //REN=1允许串行接受状态，串口工作模式2          
  15   1              TMOD= 0x20;         //定时器工作方式2       8位 自动重装载定时器  实现波特率 
  16   1              AUXR=0X40;               //开启1T模式
  17   1      //      TL1 = 0xfd;     //设置波特率为115200
  18   1      //      TH1 = 0xfd;
  19   1                      TL1 = 0xdc;     //设置波特率为9600
  20   1                TH1 = 0xdc;
  21   1              
  22   1              TR1  = 1;        //开启定时器1                                                                      
  23   1              EA   = 1;        // 开总中断 
  24   1        ES=1; 
  25   1      }       
  26          
  27          void UartInit2()   //串口2
  28          {
  29   1              S2CON = 0x50;           //8位数据,可变波特率
  30   1              AUXR|= 0x14;            //定时器2时钟为Fosc,即1T,启动定时器2
  31   1      //      T2L = 0xE8;             //设定定时初值
  32   1      //      T2H = 0xFF;             //设定定时初值
  33   1              
  34   1              T2L = 0xe0;     //设置波特率为9600
  35   1              T2H = 0xfe; 
  36   1              
  37   1              IE2=0x01;           //串口2中断使能 
  38   1              EA=1;
  39   1      }
  40          
  41          void UartInit3()                //9600bps@11.0592MHz
  42          {
  43   1              S3CON = 0x50;           //8位数据,可变波特率
  44   1              T4T3M = 0x0a;           //定时器3时钟为Fosc,即1T
  45   1              T3L = 0xE0;             //设定定时初值
  46   1              T3H = 0xFE;             //设定定时初值  9600
  47   1      //      T4T3M |= 0x08;          //启动定时器3
  48   1              IE2 = 0x08;
  49   1        EA = 1;
  50   1      }
  51          
  52          void Uart1SendByte(char dat)
  53          {
  54   1              SBUF = dat;
C51 COMPILER V9.54   UART                                                                  03/11/2021 23:01:56 PAGE 2   

  55   1              RI=0;
  56   1              while(TI == 0);
  57   1              TI = 0;
  58   1      }
  59          
  60          
  61          
  62          //串口1发送字符串
  63          void Uart1SendStr(unsigned char *str)
  64          {
  65   1              while(*str!='\0')
  66   1              {
  67   2                      Uart1SendByte(*str++);
  68   2                      
  69   2              }
  70   1      }
  71          
  72          void Uart2SendByte(char dat)      // 发送端(发送的是字符)
  73          {
  74   1              S2BUF = dat;                      // 将字符送入串口2的发送缓冲寄存器
  75   1              while(!(S2CON&S2TI));         // 判断发送是否结束：S2CON.bit2 = 0：发送中 1：发送结束
  76   1              S2CON &= ~S2TI;                       // 手动清零标志位，令S2CON.bit2 = 0
  77   1      }
  78          
  79          //void Uart2SendStr(char *str)    // 通过调用发送字符函数来发送字符数组
  80          //{
  81          //      while(*str)
  82          //      {
  83          //              Uart2SendByte(*str);
  84          //              str++;
  85          //      }
  86          //}
  87          
  88          void Uart3SendByte(char dat)      // 发送端(发送的是字符)
  89          {
  90   1              S3BUF = dat;                      // 将字符送入串口2的发送缓冲寄存器
  91   1              while(!(S3CON&S3TI));      // 判断发送是否结束：S2CON.bit2 = 0：发送中 1：发送结束
  92   1              S3CON &= ~S3TI;                 
  93   1              // 手动清零标志位，令S2CON.bit2 = 0
  94   1      }
  95          
  96          
  97          
  98          void Usart1() interrupt 4   using 1                 //串口1中断
  99          {
 100   1                      receive_1=SBUF;//出去接收到的数据
 101   1                      RI = 0;//清除接收中断标志位
 102   1                SBUF=receive_1;    //将接收到的数据放入到发送寄存器
 103   1                      while(!TI);                      //等待发送数据完成
 104   1                TI=0;
 105   1              
 106   1                                                       //清除发送完成标志位
 107   1      //      S2BUF = receive_2;
 108   1      //      while(!(S2CON&S2TI));         //等待发送数据完成
 109   1      //  S2CON&= ~S2TI;            //清除发送完成标志位
 110   1      }
 111          
 112          
 113          void Usart2() interrupt 8 using 2       //串口二中断
 114          {
 115   1              receive_2 = S2BUF; 
 116   1              S2CON &= ~S2RI;
C51 COMPILER V9.54   UART                                                                  03/11/2021 23:01:56 PAGE 3   

 117   1              S2BUF = receive_2;
 118   1        while(!(S2CON&S2TI));       //等待发送数据完成
 119   1        S2CON&= ~S2TI;            //清除发送完成标志位
 120   1              
 121   1      //      
 122   1      //              SBUF=receive_1;    //将接收到的数据放入到发送寄存器
 123   1      //              while(!TI);                      //等待发送数据完成
 124   1      //        TI=0; 
 125   1      }
 126          
 127          void Usart3() interrupt 17        //串口二中断
 128          {
 129   1              S3CON &= ~S3RI;
 130   1              ReceData[flay485++] = S3BUF; 
 131   1              
 132   1      
 133   1              if(ReceData[0]!=0x04)
 134   1              {
 135   2                      flay485=0;
 136   2              }
 137   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    205    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
